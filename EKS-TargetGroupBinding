- AWS Load Balancer Controller installation 
    1. Create Policy & Role: 
        a. IAM roles for service accounts 
            1. Create an IAM OIDC provider.
                eksctl utils associate-iam-oidc-provider \
                --region us-east-1 \
                --cluster demo-cluster \
                --approve
                
            2. Download an IAM policy
                
                curl -o iam-policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.7/docs/install/iam_policy.json
                
            3. Create an IAM policy named `AWSLoadBalancerControllerIAMPolicy`
                
                aws iam create-policy \
                --policy-name AWSLoadBalancerControllerIAMPolicy \
                --policy-document file://iam-policy.json
                
            4. Create an IAM role and Kubernetes `ServiceAccount`
                
                eksctl create iamserviceaccount \
                --cluster=<cluster-name> \
                --namespace=kube-system \
                --name=aws-load-balancer-controller \
                --attach-policy-arn=arn:aws:iam::<AWS_ACCOUNT_ID>:policy/AWSLoadBalancerControllerIAMPolicy \
                --override-existing-serviceaccounts \
                --region <region-code> \
                --approve
                
        b. attached directly to the worker node IAM roles
            1. Create a policy with below rules and add that to the existing role that is assigned to the node.
                
                curl -o iam-policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.7/docs/install/iam_policy.json
                
    2. Add controller to cluster:
        1. helm repo add eks https://aws.github.io/eks-charts
        2. Non IRSA
            
            helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=<cluster-name>
            
        3. Helm install command for clusters with IRSA:
            
            helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=<cluster-name> --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller
            
    3. Create Load Balancer
    4. Create TargetGroup and associate it with loadbalancer
    5. Create & apply target group binding deployment file

helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=PPEKS01 --set region=us-east-1 --set  vpcId=vpc-0137387abd0b0a2451ac --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller
        
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: NodePort
  ports:
    - port: 80
      nodePort: 30001
  selector:
    app: nginx
---
apiVersion: elbv2.k8s.aws/v1beta1
kind: TargetGroupBinding
metadata:
   name: my-tgb
spec:
  serviceRef:
    name: nginx # route traffic to the nginx
    port: 80
  targetGroupARN: <arn-to-targetGroup>
